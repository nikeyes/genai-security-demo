[tool.poetry]
name = "security-chatbot"
version = "0.1.0"
description = ""
authors = ["Your Name <you@example.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.10"
gradio = "^5.15.0"
boto3 = "1.36.0"
llama-index = "^0.12.16"
llama-index-embeddings-bedrock = "^0.5.0"
llama-index-llms-bedrock = "^0.3.3"
asyncio = "^3.4.3"
torch = "2.2.0"
sentence-transformers = "2.7.0"
codeshield = "^1.0.1"
openai = "^1.68.2"
groq = "^0.20.0"

[tool.poetry.group.dev.dependencies]
ipykernel = "^6.29.5"
pytest = "^8.3.5"
pytest-cov = "^6.0.0"
ruff = "^0.11.2"

[tool.ruff]
extend-include = ["*.ipynb"]
line-length = 140
# Added from flake8 config
lint.select = ["E", "F", "G"] # G is the flake8-logging-format extension
exclude = [".git", ".venv"]
lint.ignore = [
    "S101", # Use of assert detected (useless with pytest)
    "S301", # It is OK to use Pickle in this project
    "S403", # It is OK to use Pickle in this project  
    # Converted from pylint disable
    "D",       # All missing-docstring rules (D100-D107)
    "E402",    # import-outside-toplevel
    "PLR0913", # too-many-arguments
    "PLR0914", # too-many-locals
    "PLW0603", # global-statement
]

[tool.ruff.format]
quote-style = "single"

# Pylint complexity settings
[tool.ruff.lint.pylint]
max-args = 5
max-bool-expr = 5
max-nested-blocks = 2
max-public-methods = 10
max-returns = 5
max-statements = 50

# Pylint ignored classes
[tool.ruff.lint.isort]
known-first-party = ["tests"] 

[tool.ruff.lint.mccabe]
max-complexity = 8

[tool.ruff.lint.per-file-ignores]
"src/prompts.py" = ["E501"] # Ignore line length in this file

[tool.pytest.ini_options]
testpaths = [
    "tests",
    "tests/integration_tests",
    "tests/unit_tests",
    "tests/approval_tests",
]
pythonpath = ["src"]
python_files = ["test_*.py", "*_test.py", "*_should.py"]
python_classes = ["Test", "Acceptance", "Given"]
python_functions = ["test", "*_test", "when_*", "then_*"]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
